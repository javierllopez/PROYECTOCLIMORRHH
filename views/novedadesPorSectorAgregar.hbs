{{! Vista para agregar novedades por sector }}
<div class="container-fluid">
  <div class="row justify-content-center mt-3">
    <div class="col-12 col-lg-8">
      <div class="card shadow-sm border-0">
        <div class="card-header bg-primary text-white rounded-top-3 d-flex align-items-center justify-content-between">
          <h4 class="mb-0"><i class="bi bi-plus-circle"></i> Agregar novedad por sector</h4>
          <a href="/novedadesPorSector?IdSector={{sector.Id}}"
            class="btn btn-outline-light btn-sm d-flex align-items-center">
            <i class="bi bi-arrow-left me-2"></i> Volver
          </a>
        </div>
        <form id="formNovedadSector" action="/novedadesPorSector/Agregar" method="POST" autocomplete="off">
          <div class="card-body">
            <input type="hidden" name="IdSector" value="{{sector.Id}}">
            <input type="hidden" id="TipoNovedad" name="TipoNovedad" value="">
            <div class="row mb-3">
              <div class="col-md-6 mb-3 mb-md-0">
                <label for="IdPersonal" class="form-label"><i class="bi bi-person"></i> Empleado</label>
                <select class="form-select" id="IdPersonal" name="IdPersonal" required>
                  <option value="">Seleccione un empleado...</option>
                  {{#each empleados}}
                  <option value="{{this.Id}}" data-categoria="{{this.IdCategoria}}">{{this.ApellidoYNombre}}</option>
                  {{/each}}
                </select>
              </div>
              <div class="col-md-6">
                <label for="IdNomina" class="form-label"><i class="bi bi-list-ul"></i> Nómina</label>
                <select class="form-select" id="IdNomina" name="IdNomina" required disabled>
                  <option value="">Seleccione una nómina...</option>
                </select>
                <!-- Plantilla oculta con todas las nóminas -->
                <select id="NominaTemplate" class="d-none">
                  {{#each nominas}}
                  <option value="{{this.Id}}" data-categoria="{{this.IdCategoria}}" data-horasmensuales="{{this.HorasMensuales}}" data-haceguardiasdiurnas="{{this.HaceGuardiasDiurnas}}">{{this.Descripcion}}</option>
                  {{/each}}
                </select>
              </div>
            </div>
            <div class="row mb-3">
              <div class="col-md-6 mb-3 mb-md-0">
                <label for="Motivo" class="form-label"><i class="bi bi-flag"></i> Motivo</label>
                <select class="form-select" id="Motivo" name="Motivo" required>
                  <option value="">Seleccione un motivo...</option>
                  {{#each motivos}}
                  <option value="{{this.Id}}" data-informareemplazo="{{this.InformaReemplazo}}"
                    data-descripcionobligatoria="{{this.DescripcionObligatoria}}">{{this.Descripcion}}</option>
                  {{/each}}
                </select>
              </div>
              <div class="col-md-6" id="InformaReemplazo" style="display: none;">
                <label for="empleadoReemplazo" class="form-label"><i class="bi bi-person-arrows"></i> Reemplazo</label>
                <select class="form-select" id="empleadoReemplazo" name="empleadoReemplazo" required>
                  <option value="">Seleccione un empleado...</option>
                  {{#each empleadosReemplazo}}
                  <option value="{{this.Id}}">{{this.ApellidoYNombre}}</option>
                  {{/each}}
                </select>
              </div>
              <div class="col-md-6 mb-3 mb-md-0" id="InformaObservaciones" style="display: none;">
                <label for="Observaciones" class="form-label"><i class="bi bi-chat-left-text"></i> Observaciones</label>
                <textarea class="form-control" id="Observaciones" name="Observaciones" rows="2"
                  maxlength="255"></textarea>
              </div>
            </div>
            <div id="informaHoras" name="informaHoras" style="display: none;">
              <div class="row mb-3">
                <div class="col-md-4 mb-3 mb-md-0">
                  <label for="Fecha" class="form-label"><i class="bi bi-calendar-event"></i> Fecha</label>
                  <input type="date" class="form-control" id="Fecha" name="Fecha" required>
                </div>
                <div class="col-md-4 mb-3 mb-md-0">
                  <label for="Inicio" class="form-label"><i class="bi bi-clock"></i> Hora inicio</label>
                  <input type="time" class="form-control" id="Inicio" name="Inicio" required>
                </div>
                <div class="col-md-4">
                  <label for="Fin" class="form-label"><i class="bi bi-clock-history"></i> Hora fin</label>
                  <input type="time" class="form-control" id="Fin" name="Fin" required>
                </div>
              </div>
            </div>
            <div class="row mb-3" id="informaGuardias" name="informaGuardias" style="display: none;">
              <div class="col-md-4 mb-3 mb-md-0">
                <label for="fechaGuardia" class="form-label"><i class="bi bi-calendar-event"></i> Fecha guardia</label>
                <input type="date" class="form-control" id="fechaGuardia" name="FechaGuardia">
              </div>
              <div class="col-md-4 mb-3 mb-md-0">
                <label for="GuardiaRealizada" class="form-label"><i class="bi bi-list-check"></i> Guardia
                  realizada</label>
                <select class="form-select" id="GuardiaRealizada" name="GuardiaRealizada">
                  <option value="">Seleccione una guardia...</option>
                  {{#each guardias}}
                  <option value="{{this.Id}}">{{this.Descripcion}} de {{HoraLocal this.Inicio}} a {{HoraLocal
                    this.Fin}}</option>
                  {{/each}}
                </select>
              </div>
              <div class="col-md-4">
                <label for="TipoGuardia" class="form-label"><i class="bi bi-tag"></i> Tipo de guardia</label>
                <select class="form-select" id="TipoGuardia" name="TipoGuardia">
                  <option value="">Seleccione tipo...</option>
                  <option value="Completa">Completa</option>
                  <option value="Parcial">Parcial</option>
                </select>
              </div>
            </div>
            <!-- Row visible solo si tipoGuardia = Parcial -->
            <div class="row mb-3" id="rowGuardiaParcial" style="display: none;">
              <div class="col-md-6 mb-3 mb-md-0">
                <label for="InicioGuardiaParcial" class="form-label"><i class="bi bi-clock"></i> Inicio (parcial)</label>
                <input type="time" class="form-control" id="InicioGuardiaParcial" name="InicioGuardiaParcial">
              </div>
              <div class="col-md-6">
                <label for="FinGuardiaParcial" class="form-label"><i class="bi bi-clock-history"></i> Fin (parcial)</label>
                <input type="time" class="form-control" id="FinGuardiaParcial" name="FinGuardiaParcial">
              </div>
            </div>
          </div>
          <div class="card-footer bg-light py-2 rounded-bottom-3 d-flex justify-content-end align-items-center gap-2">
            <button type="reset" id="btnLimpiar" class="btn btn-outline-secondary btn-sm d-flex align-items-center"
              style="height: 40px; font-size: 1rem;">
              <i class="bi bi-arrow-counterclockwise me-2"></i> Limpiar
            </button>
            <button type="submit" class="btn btn-success btn-sm px-4 d-flex align-items-center"
              style="height: 40px; font-size: 1rem;">
              <i class="bi bi-check-circle me-2"></i> Guardar novedad
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    const form = document.getElementById('formNovedadSector');

    const motivoSelect = document.getElementById('Motivo');
    const informaReemplazoDiv = document.getElementById('InformaReemplazo');
    const informaObservacionesDiv = document.getElementById('InformaObservaciones');
    const reemplazoInput = document.getElementById('empleadoReemplazo');
    const observacionesInput = document.getElementById('Observaciones');

    const idPersonalSelect = document.getElementById('IdPersonal');
    const nominaSelect = document.getElementById('IdNomina');
    const nominaTemplate = document.getElementById('NominaTemplate');
    const informaHorasDiv = document.getElementById('informaHoras');
    const informaGuardiasDiv = document.getElementById('informaGuardias');
    const tipoNovedadInput = document.getElementById('TipoNovedad');

    // Campos de horas
    const fechaHorasInput = document.getElementById('Fecha');
    const inicioInput = document.getElementById('Inicio');
    const finInput = document.getElementById('Fin');

    // Referencias guardias
    const tipoGuardiaSelect = document.getElementById('TipoGuardia');
    const rowGuardiaParcial = document.getElementById('rowGuardiaParcial');
    const inicioGuardiaParcial = document.getElementById('InicioGuardiaParcial');
    const finGuardiaParcial = document.getElementById('FinGuardiaParcial');

    function actualizarCamposMotivo() {
      if (!motivoSelect) return;
      const selectedOption = motivoSelect.options[motivoSelect.selectedIndex];
      if (!selectedOption || !selectedOption.value) {
        if (informaReemplazoDiv) informaReemplazoDiv.style.display = 'none';
        if (reemplazoInput) reemplazoInput.required = false;
        if (informaObservacionesDiv) informaObservacionesDiv.style.display = 'none';
        if (observacionesInput) observacionesInput.required = false;
        return;
      }
      const informaReemplazo = selectedOption.getAttribute('data-informareemplazo');
      const descripcionObligatoria = selectedOption.getAttribute('data-descripcionobligatoria');
      if (informaReemplazo === '1' || informaReemplazo === 'true') {
        if (informaReemplazoDiv) informaReemplazoDiv.style.display = '';
        if (reemplazoInput) reemplazoInput.required = true;
      } else {
        if (informaReemplazoDiv) informaReemplazoDiv.style.display = 'none';
        if (reemplazoInput) reemplazoInput.required = false;
      }
      if (descripcionObligatoria === '1' || descripcionObligatoria === 'true') {
        if (informaObservacionesDiv) informaObservacionesDiv.style.display = '';
        if (observacionesInput) observacionesInput.required = true;
      } else {
        if (informaObservacionesDiv) informaObservacionesDiv.style.display = 'none';
        if (observacionesInput) observacionesInput.required = false;
      }
    }

    function limpiarNomina() {
      if (!nominaSelect) return;
      // Dejar solo el placeholder
      nominaSelect.innerHTML = '<option value="">Seleccione una nómina...</option>';
      nominaSelect.value = '';
      nominaSelect.disabled = true;
      if (tipoNovedadInput) tipoNovedadInput.value = '';
      if (informaHorasDiv) informaHorasDiv.style.display = 'none';
      if (informaGuardiasDiv) informaGuardiasDiv.style.display = 'none';
      // Limpiar y des-requerir campos de horas
      if (fechaHorasInput) { fechaHorasInput.required = false; fechaHorasInput.value = ''; }
      if (inicioInput) { inicioInput.required = false; inicioInput.value = ''; }
      if (finInput) { finInput.required = false; finInput.value = ''; }
      // Ocultar parcial y limpiar
      if (rowGuardiaParcial) rowGuardiaParcial.style.display = 'none';
      if (inicioGuardiaParcial) { inicioGuardiaParcial.required = false; inicioGuardiaParcial.value = ''; }
      if (finGuardiaParcial) { finGuardiaParcial.required = false; finGuardiaParcial.value = ''; }
    }

    function llenarNominasPorCategoria(idCategoria) {
      if (!nominaSelect || !nominaTemplate) return;
      limpiarNomina();
      if (!idCategoria) return;
      // Agregar opciones que coincidan con la categoría
      Array.from(nominaTemplate.options).forEach(opt => {
        if (String(opt.dataset.categoria) === String(idCategoria)) {
          const o = document.createElement('option');
          o.value = opt.value;
          o.textContent = opt.textContent;
          if (opt.dataset.horasmensuales) o.setAttribute('data-horasmensuales', opt.dataset.horasmensuales);
          if (opt.dataset.haceguardiasdiurnas) o.setAttribute('data-haceguardiasdiurnas', opt.dataset.haceguardiasdiurnas);
          nominaSelect.appendChild(o);
        }
      });
      // Habilitar si hay más de 1 opción (además del placeholder)
      if (nominaSelect.options.length > 1) {
        nominaSelect.disabled = false;
      }
    }

    function actualizarCamposNomina() {
      if (!nominaSelect) return;
      const selectedOption = nominaSelect.options[nominaSelect.selectedIndex];
      if (!selectedOption || !selectedOption.value) {
        if (informaHorasDiv) informaHorasDiv.style.display = 'none';
        if (informaGuardiasDiv) informaGuardiasDiv.style.display = 'none';
        if (tipoNovedadInput) tipoNovedadInput.value = '';
        if (fechaHorasInput) fechaHorasInput.required = false;
        if (inicioInput) inicioInput.required = false;
        if (finInput) finInput.required = false;
        return;
      }
      const horasMensuales = parseInt(selectedOption.getAttribute('data-horasmensuales') || '0', 10);
      const haceGuardiasDiurnas = selectedOption.getAttribute('data-haceguardiasdiurnas');
      const esHoras = !isNaN(horasMensuales) && horasMensuales > 0;

      if (esHoras) {
        if (informaHorasDiv) informaHorasDiv.style.display = '';
        if (informaGuardiasDiv) informaGuardiasDiv.style.display = 'none';
        if (tipoNovedadInput) tipoNovedadInput.value = 'horas';
        if (fechaHorasInput) fechaHorasInput.required = true;
        if (inicioInput) inicioInput.required = true;
        if (finInput) finInput.required = true;
      } else if (haceGuardiasDiurnas === '1' || haceGuardiasDiurnas === 'true') {
        if (informaHorasDiv) informaHorasDiv.style.display = 'none';
        if (informaGuardiasDiv) informaGuardiasDiv.style.display = '';
        if (tipoNovedadInput) tipoNovedadInput.value = 'guardia';
        // En guardias los campos de horas no son requeridos
        if (fechaHorasInput) { fechaHorasInput.required = false; fechaHorasInput.value = ''; }
        if (inicioInput) { inicioInput.required = false; inicioInput.value = ''; }
        if (finInput) { finInput.required = false; finInput.value = ''; }
      } else {
        if (informaHorasDiv) informaHorasDiv.style.display = 'none';
        if (informaGuardiasDiv) informaGuardiasDiv.style.display = 'none';
        if (tipoNovedadInput) tipoNovedadInput.value = '';
        if (fechaHorasInput) { fechaHorasInput.required = false; fechaHorasInput.value = ''; }
        if (inicioInput) { inicioInput.required = false; inicioInput.value = ''; }
        if (finInput) { finInput.required = false; finInput.value = ''; }
      }
      actualizarTipoGuardia();
    }

    function actualizarTipoGuardia() {
      if (!rowGuardiaParcial || !tipoGuardiaSelect) return;
      const esParcial = (tipoGuardiaSelect.value === 'Parcial');
      rowGuardiaParcial.style.display = esParcial ? '' : 'none';
      if (inicioGuardiaParcial) inicioGuardiaParcial.required = esParcial;
      if (finGuardiaParcial) finGuardiaParcial.required = esParcial;
      if (!esParcial) {
        if (inicioGuardiaParcial) inicioGuardiaParcial.value = '';
        if (finGuardiaParcial) finGuardiaParcial.value = '';
      }
    }

    if (motivoSelect) motivoSelect.addEventListener('change', actualizarCamposMotivo);
    if (nominaSelect) nominaSelect.addEventListener('change', actualizarCamposNomina);
    if (tipoGuardiaSelect) tipoGuardiaSelect.addEventListener('change', actualizarTipoGuardia);

    if (idPersonalSelect) {
      idPersonalSelect.addEventListener('change', function () {
        const opt = idPersonalSelect.options[idPersonalSelect.selectedIndex];
        const cat = opt && opt.value ? opt.getAttribute('data-categoria') : '';
        llenarNominasPorCategoria(cat);
        // Tras cargar nóminas, reiniciar estado dependiente
        actualizarCamposNomina();
      });
    }

    // Botón Limpiar: tras reset, ocultar secciones condicionales y quitar required
    if (form) {
      form.addEventListener('reset', function () {
        setTimeout(() => {
          if (informaReemplazoDiv) informaReemplazoDiv.style.display = 'none';
          if (reemplazoInput) reemplazoInput.required = false;
          if (informaObservacionesDiv) informaObservacionesDiv.style.display = 'none';
          if (observacionesInput) observacionesInput.required = false;
          limpiarNomina();
        }, 0);
      });
    }

    // Inicializar al cargar
    actualizarCamposMotivo();
    limpiarNomina();
    actualizarTipoGuardia();
  });
</script>