<div class="d-none d-md-block">
    <div class="d-flex flex-column flex-shrink-0 p-3 shadow-sm vh-100 fixed-top" style="width: 250px;">
        <style>
            /* Ajuste de tamaño para badges en el menú lateral */
            #badge-novedades-desktop,
            #badge-autorizar-horas-desktop {
                font-size: 0.65rem;
                padding: 0.2rem 0.35rem;
                line-height: 1;
            }
        </style>
        <a href="/" class="d-flex align-items-center mb-3 mb-md-0 me-md-auto link-body-emphasis text-decoration-none">
            <img src="/img/DelBuenPastor.jpg" alt="" width="80" height="60" class="me-2">
            <span class="fs-4">CLIMO S.A.</span>
        </a>
        <hr>
        <ul class="nav nav-pills flex-column mb-auto">
            <li>
                <a href="/novedades" class="nav-link link-body-emphasis d-flex align-items-center position-relative pe-5" aria-current="page" id="link-novedades-desktop">
                    <span><i class="bi-calendar3 p-2"></i> Mis Horas</span>
                    <span id="badge-novedades-desktop" class="badge rounded-pill bg-warning text-dark d-none position-absolute top-50 end-0 translate-middle-y me-2"></span>
                </a>
            </li>
            <li>
                <a href="/misPagos" class="nav-link link-body-emphasis d-flex align-items-center position-relative pe-5" id="link-misPagos-desktop">
                    <span><i class="bi-receipt p-2"></i> Mis Pagos</span>
                </a>
            </li>
            <li>
                <a href="/autorizarHoras" class="nav-link link-body-emphasis d-flex align-items-center position-relative pe-5" id="link-autorizar-horas-desktop">
                    <span><i class="bi-hand-thumbs-up p-2"></i> Autorizar Horas</span>
                    <span id="badge-autorizar-horas-desktop" class="badge rounded-pill bg-danger d-none position-absolute top-50 end-0 translate-middle-y me-2"></span>
                </a>
            </li>
        </ul>
        <hr>
        <div class="dropdown">
            <a href="#" class="d-flex align-items-center link-body-emphasis text-decoration-none dropdown-toggle"
                data-bs-toggle="dropdown" aria-expanded="false">
                <img src="/img/usuario.png" alt="" width="32" height="32" class="rounded-circle me-2">
                <strong>{{usuario}}</strong>
            </a>
            <ul class="dropdown-menu text-small shadow">
                <li><a class="dropdown-item" href="/login/cambiarClave">Cambiar contraseña</a></li>
                <li>
                    <hr class="dropdown-divider">
                </li>
                <li><a class="dropdown-item" href="/salir">Salir</a></li>
            </ul>
        </div>
        <script>
            // Actualiza badges en escritorio si existen
            document.addEventListener('DOMContentLoaded', () => {
                const badgeNov = document.getElementById('badge-novedades-desktop');
                const badgeAut = document.getElementById('badge-autorizar-horas-desktop');
                const setBadge = (el, val) => {
                    if (!el) return;
                    const n = Number(val) || 0;
                    if (n > 0) {
                        el.textContent = n;
                        el.classList.remove('d-none');
                    } else {
                        el.textContent = '';
                        el.classList.add('d-none');
                    }
                };
                const fetchNum = async (url) => {
                    try {
                        const res = await fetch(url, { headers: { 'Accept': 'application/json' } });
                        const data = await res.json().catch(() => null);
                        if (typeof data === 'number') return data;
                        if (data && typeof data === 'object') {
                            for (const k of ['cantidad', 'pendientes', 'count', 'cantidadPendientes', 'total']) {
                                if (data[k] != null) return Number(data[k]);
                            }
                            const nums = Object.values(data).filter(v => typeof v === 'number');
                            if (nums.length) return nums[0];
                        }
                    } catch (e) { /* sin-op */ }
                    return 0;
                };
                const update = async () => {
                    const [noved, auto] = await Promise.all([
                        fetchNum('/novedades/pendientes'),
                        fetchNum('/autorizarHoras/pendientes')
                    ]);
                    setBadge(badgeNov, noved);
                    setBadge(badgeAut, auto);
                };
                update();
                setInterval(update, 60000);
            });
        </script>
    </div>
</div>
<!-- En mobile, la navbar se renderiza desde layout.hbs para todas las vistas -->
<div class="d-block d-md-none">
    <div class="container-fluid p-3" style="min-height:100vh;">
        <div class="row g-3">
            <div class="col-12">
                <div class="card shadow-sm">
                    <div class="card-body d-flex align-items-center gap-3">
                        <img src="/img/usuario.png" alt="Usuario" width="48" height="48" class="rounded-circle">
                        <div>
                            <div class="fw-bold fs-5">{{#if supervisorNombre}}{{supervisorNombre}}{{else}}{{usuario}}{{/if}}</div>
                            <div class="text-muted">Nivel: <span class="badge text-bg-success">Supervisor</span></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-12">
                <div class="card shadow-sm h-100">
                    <div class="card-header fw-semibold">Sectores a cargo</div>
                    <div class="card-body p-0">
                        {{#if supervisorSectores}}
                        <ul class="list-group list-group-flush">
                            {{#each supervisorSectores}}
                            <li class="list-group-item d-flex align-items-center">
                                <i class="bi-diagram-3 me-2 text-secondary"></i>
                                <span class="text-truncate">{{this.Descripcion}}</span>
                            </li>
                            {{/each}}
                        </ul>
                        {{else}}
                        <div class="p-3 text-muted">No tenés sectores asignados.</div>
                        {{/if}}
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Nota: el margen izquierdo ya lo aplica layout.hbs en el contenedor principal -->
</div>